{"ast":null,"code":"var _jsxFileName = \"/home/abdallah/Documents/React-apps/Form-Validation/src/components/Form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../formInput/FormInput\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  //the start value of the state is empty\n  //instate of using many use states for each input we can make these inputs in one object in one use state\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthDay: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const inputsArry = [{\n    id: 1,\n    name: \"username\",\n    type: \"text\",\n    placeholder: \"Username\",\n    label: \"Username\"\n  }, {\n    id: 2,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"E-mail\",\n    label: \"Your Email\"\n  }, {\n    id: 3,\n    name: \"birthDay\",\n    type: \"date\",\n    placeholder: \"Username\",\n    label: \"Birth Day\"\n  }, {\n    id: 4,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Your password\",\n    label: \"password\"\n  }, {\n    id: 5,\n    name: \"confirmPassword\",\n    type: \"password\",\n    placeholder: \"confirm your password\",\n    label: \"password confirm\"\n  }]; // another thing you can use is the formData() method\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n  };\n\n  const changeHandler = e => {\n    setValues({ ...values,\n      [e.target.value]: e.target.value\n    });\n  };\n\n  console.log(\"re-render\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"POST\",\n    onSubmit: handleSubmit,\n    children: [inputsArry.map(input => {\n      /*#__PURE__*/\n      _jsxDEV(FormInput, { ...input,\n        value: values[input.name]\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"QMyAbRNedzDOxVyOvZMZyxEyNNo=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","FormInput","Form","values","setValues","username","email","birthDay","password","confirmPassword","inputsArry","id","name","type","placeholder","label","handleSubmit","e","preventDefault","data","FormData","target","changeHandler","value","console","log","map","input"],"sources":["/home/abdallah/Documents/React-apps/Form-Validation/src/components/Form/Form.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../formInput/FormInput\";\nimport \"./form.css\";\n\nexport default function Form() {\n  //the start value of the state is empty\n  //instate of using many use states for each input we can make these inputs in one object in one use state\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    birthDay: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const inputsArry = [\n    {\n      id: 1,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"Username\",\n      label: \"Username\",\n    },\n    {\n      id: 2,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"E-mail\",\n      label: \"Your Email\",\n    },\n    {\n      id: 3,\n      name: \"birthDay\",\n      type: \"date\",\n      placeholder: \"Username\",\n      label: \"Birth Day\",\n    },\n    {\n      id: 4,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Your password\",\n      label: \"password\",\n    },\n    {\n      id: 5,\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"confirm your password\",\n      label: \"password confirm\",\n    },\n  ];\n\n  // another thing you can use is the formData() method\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const data = new FormData(e.target);\n  };\n\n  const changeHandler = (e) => {\n    setValues({ ...values, [e.target.value]: e.target.value });\n  };\n\n  console.log(\"re-render\");\n  return (\n    <form action=\"POST\" onSubmit={handleSubmit}>\n      {inputsArry.map((input) => {\n        <FormInput key={input.id} {...input} value={values[input.name]} />;\n      })}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B;EACA;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC;IACnCK,QAAQ,EAAE,EADyB;IAEnCC,KAAK,EAAE,EAF4B;IAGnCC,QAAQ,EAAE,EAHyB;IAInCC,QAAQ,EAAE,EAJyB;IAKnCC,eAAe,EAAE;EALkB,CAAD,CAApC;EAQA,MAAMC,UAAU,GAAG,CACjB;IACEC,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,UAJf;IAKEC,KAAK,EAAE;EALT,CADiB,EAQjB;IACEJ,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE,OAHR;IAIEC,WAAW,EAAE,QAJf;IAKEC,KAAK,EAAE;EALT,CARiB,EAejB;IACEJ,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,MAHR;IAIEC,WAAW,EAAE,UAJf;IAKEC,KAAK,EAAE;EALT,CAfiB,EAsBjB;IACEJ,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE,UAHR;IAIEC,WAAW,EAAE,eAJf;IAKEC,KAAK,EAAE;EALT,CAtBiB,EA6BjB;IACEJ,EAAE,EAAE,CADN;IAEEC,IAAI,EAAE,iBAFR;IAGEC,IAAI,EAAE,UAHR;IAIEC,WAAW,EAAE,uBAJf;IAKEC,KAAK,EAAE;EALT,CA7BiB,CAAnB,CAX6B,CAiD7B;;EACA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,MAAf,CAAb;EACD,CAHD;;EAKA,MAAMC,aAAa,GAAIL,CAAD,IAAO;IAC3Bb,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACc,CAAC,CAACI,MAAF,CAASE,KAAV,GAAkBN,CAAC,CAACI,MAAF,CAASE;IAAxC,CAAD,CAAT;EACD,CAFD;;EAIAC,OAAO,CAACC,GAAR,CAAY,WAAZ;EACA,oBACE;IAAM,MAAM,EAAC,MAAb;IAAoB,QAAQ,EAAET,YAA9B;IAAA,WACGN,UAAU,CAACgB,GAAX,CAAgBC,KAAD,IAAW;MACzB;MAAA,QAAC,SAAD,OAA8BA,KAA9B;QAAqC,KAAK,EAAExB,MAAM,CAACwB,KAAK,CAACf,IAAP;MAAlD,GAAgBe,KAAK,CAAChB,EAAtB;QAAA;QAAA;QAAA;MAAA;IACD,CAFA,CADH,eAIE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GApEuBT,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}