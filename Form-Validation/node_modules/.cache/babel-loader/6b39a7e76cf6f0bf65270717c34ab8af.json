{"ast":null,"code":"var _jsxFileName = \"/home/abdallah/Documents/React-apps/Form-Validation/src/components/Form/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport FormInput from \"../formInput/FormInput\";\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  //the start value of the state is empty\n  //   const [username, setUsername] = useState(\"\");\n  //when using set state every time the input get updated the the hole function get re-render which is not good always\n  //so instate of using (useState) we will use (useRef) hook\n  const usernameRef = useRef();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(usernameRef.current.value);\n  };\n\n  console.log(\"re-render\");\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormInput, {\n      placeholder: \"username\",\n      refer: usernameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      placeholder: \"full Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Form, \"kMzvpAjoWrdhagxJlpQ94gsIpv4=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useRef","useState","FormInput","Form","usernameRef","handleSubmit","e","preventDefault","console","log","current","value"],"sources":["/home/abdallah/Documents/React-apps/Form-Validation/src/components/Form/Form.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport FormInput from \"../formInput/FormInput\";\nimport \"./form.css\";\n\nexport default function Form() {\n  //the start value of the state is empty\n  //   const [username, setUsername] = useState(\"\");\n  //when using set state every time the input get updated the the hole function get re-render which is not good always\n  //so instate of using (useState) we will use (useRef) hook\n\n  const usernameRef = useRef();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(usernameRef.current.value);\n  };\n  console.log(\"re-render\");\n  return (\n    <form action=\"POST\" onSubmit={handleSubmit}>\n      <FormInput placeholder=\"username\" refer={usernameRef} />\n      <FormInput placeholder=\"Email\" />\n      <FormInput placeholder=\"full Name\" />\n      <FormInput placeholder=\"password\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,YAAP;;AAEA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B;EACA;EACA;EACA;EAEA,MAAMC,WAAW,GAAGJ,MAAM,EAA1B;;EACA,MAAMK,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;IACAC,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACM,OAAZ,CAAoBC,KAAhC;EACD,CAHD;;EAIAH,OAAO,CAACC,GAAR,CAAY,WAAZ;EACA,oBACE;IAAM,MAAM,EAAC,MAAb;IAAoB,QAAQ,EAAEJ,YAA9B;IAAA,wBACE,QAAC,SAAD;MAAW,WAAW,EAAC,UAAvB;MAAkC,KAAK,EAAED;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,SAAD;MAAW,WAAW,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,SAAD;MAAW,WAAW,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE,QAAC,SAAD;MAAW,WAAW,EAAC;IAAvB;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GArBuBD,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}